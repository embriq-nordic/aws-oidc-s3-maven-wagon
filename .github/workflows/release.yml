name: Maven Release to Nexus OSSRH

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # If you're using GPG signing, set up GPG.
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: '[{ "id": "ossrh", "username": "${{ secrets.OSSRH_USERNAME }}", "password": "${{ secrets.OSSRH_PASSWORD }}" }]'

      - name: Set Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Release to Nexus OSSRH
        run: |
          ./mvnw versions:set -DremoveSnapshot=true
          VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout 2> /dev/null)
          sed -i -e "s/<version>.*<\/version>/<version>${VERSION}<\/version>/g" README.md 
          git commit -am "Prepare for release of ${VERSION}"
          ./mvnw deploy \
            -P release \
            -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
          git tag v${VERSION}
          git push origin v${VERSION}
          ./mvnw versions:set -DnextSnapshot=true
          git commit -am "Update to next snapshot version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}